      位域

1.    有些数据在存储时并不需要占用一个完整的字节，只需要占用一个或几个二进制位即可。例如开关只有通电和断电两种状态，用 0 和 1 表示足以，也就是用一个二进位。正是基于这种考虑，C语言又提供了一种叫做位域的数据结构。

2.    用法:

struct bs{
    type m;
    type n:4;
    char ch:6;
}a;

a.m a.n a.ch
位域的值不能大于 char 的长度，a.ch的值不能大于6位，更不能大于char.

C语言标准规定，位域的宽度不能超过它所衣服的数据类型的长度。
通俗的讲，成员变量都是有类型的，这个类型限制了成员变量的最大长度。
:后面的数字不能超过这个数据类型的长度.
位域技术就是在成员变量所占用的内存中选出一部分位宽来存储数据。

3.目前C99标准支持 int unsigned int _Bool
但是编译器在具体实现时都进行了扩展，额外支持了 char、signed char以及 enum 类型,所以代码中 char 虽不被支持，但依然能够被编译器支持。

4.位域的存储

5.无名位域


