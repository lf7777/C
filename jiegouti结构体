1.    结构体(struct) : 
结构体是用户自定义的数据类型，由程序员自己定义，可以包含多个不同数据类型的数组.每个这样的变量或数组都称为结构体的成员。
  其就像一个模板，定义出来的变量都具有相同的性质。也可以将结构体比作图纸，将结构体变量比作 零件 ，根据一张图纸生产出来的零件的特性都是一样的。

同时，结构体也可以包含其他的结构体，称为复杂数据类型或构造数据类型。

2.    struct 结构体名字{

  结构体所包含的变量或数组
	char *name; //姓名
	int num;  //学号
	int age;  //年龄
	char group; //所在学习小组
	float score;  //成绩
};
或者
}name1;

既然结构体是一种数据类型，那么就可以用来定义变量，例如 : struct stu name1,name2;
在中括号的后面分号前面加入变量名字，　}name1,name2;

3.    理论上讲结构体的各个成员在内存中是连续存储的，和数组非常类似，例如上面的结构体变量 stu1、stu2 的内存分布如下图所示，共占用 4+4+4+1+4 = 17 个字节。

但是在编译器的具体实现中，各个成员之间可能会存在缝隙，对于 stu1、stu2，成员变量 group 和 score 之间就存在 3 个字节的空白填充。这样算来，stu1、stu2 其实占用了 17 + 3 = 20 个字节。　属于成员变量之间存在'裂缝'。

4.数组使用[]获取单个元素，结构体使用点号.获取单个成员，一般格式为 : 结构体变量名.成员名; 
                     name1.name="Tom";
		     name1.num=12;
		     name1.group='A';
		     name1.score=136.5;

5.需要注意的是，结构体是一种自定义的数据类型，是创建变量的模板，不占用内存空间；结构体变量才包含了实实在在的数据，需要内存空间来存储。



















