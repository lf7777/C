    动态内存管理
1.C语言为内存的分配和管理提供几个函数，这些函数在<stdlib.h>头文件中找到。
注 : void * 类型表示未确定类型的指针，C、C++规定 void * 类型可以通过类型转换强制转换为任何其他类型的指针。

(1)  void * calloc(int num,int size);
  在内存中动态的分配num个长度为size的连续空间，并将每一个字节都初始化为0。所以它的结果是分配了 num*size 个字节长度的内存空间，并且每个字节的值都是0，

(2)  void free(void *address);
  该函数释放address所指向的内存块，释放的是动态分配的内存空间。

(3)  void *malloc(int num);
  在堆区分配一块制定大小的内存空间，用来存放数据。这块内存空间在函数执行完成后不会被初始化，它们的值是未知的。

(4)  void *realloc(void *adress,int newsize);
  该函数重新分配内存，把内存扩展到 newsize。

2.但是，如果预先不知道需要存储的文本长度，例如向存储有关一个主题的详细描述。在这里，需要定义一个指针，该指针指向未定义所需内存大小的字符，后续再根据需求来分配内存.

